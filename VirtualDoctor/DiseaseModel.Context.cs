//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtualDoctor
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DiseaseDatabaseEntities : DbContext
    {
        public DiseaseDatabaseEntities()
            : base("name=DiseaseDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ConcreteSymptomDiseaseConnection> ConcreteSymptomDiseaseConnections { get; set; }
        public virtual DbSet<DiseaseCorelation> DiseaseCorelations { get; set; }
        public virtual DbSet<Disease> Diseases { get; set; }
        public virtual DbSet<PatientDiseaseCas> PatientDiseaseCases { get; set; }
        public virtual DbSet<Patient> Patients { get; set; }
        public virtual DbSet<SymptomCathegory> SymptomCathegories { get; set; }
        public virtual DbSet<Symptom> Symptoms { get; set; }
    
        public virtual int NewDiseaseCase(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewDiseaseCase", idParameter);
        }
    }
}
